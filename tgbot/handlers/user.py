import asyncio
import re
from datetime import datetime, timedelta

from aiogram import Router, Bot
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from apscheduler.schedulers import SchedulerAlreadyRunningError
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from tgbot.config import load_config, Config
from tgbot.db.sqllite import Database
from tgbot.misc.states import RegisterUser

user_router = Router()
db = Database()
config = load_config(".env")
bot = Bot(token=config.tg_bot.token)


async def send_message_in_1_min(bot: Bot, user_id):
    text = """–°–ø—Ä–∞—Ü—é—î–º–æ—Å—å –∑ —Ç–æ–±–æ—éüíÜüèº‚Äç‚ôÄÔ∏è‚ô•Ô∏è. –ó–∞ —Ç–≤—ñ–π –≤–∏–¥—ñ–ª–µ–Ω–∏–π —á–∞—Å - —Ç—Ä–∏–º–∞–π –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π —É—Ä–æ–∫ —ñ –ø–æ—Å—ñ–±–Ω–∏–∫ –ø–æ REELS. –ö–∞–∂—É—Ç—å, —Ç–æ–±—ñ –≤–∞–∂–∫–æ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ REELS —ñ –≤–∑–∞–≥–∞–ª—ñ –∑—Ä–æ–∑—É–º—ñ—Ç–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∏ —ñ–Ω—Å—Ç–∏ - —Ç–æ–º—É –≤ —Ü—å–æ–º—É —É—Ä–æ—Ü—ñ —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à —Å—Ç—Ä–∞—Ç–µ–≥—ñ—é —ñ –ù–ê–í–Ü–¢–¨ –¢–ê–ë–õ–ò–¶–Æ –î–õ–Ø –†–ï–ì–£–õ–Ø–†–ù–û–°–¢–Ü\nhttps://shorturl.at/irJV3 \n\n–í —Ü—å–æ–º—É —É—Ä–æ—Ü—ñ –ê–ª—å–æ–Ω–∞ –¥—ñ–ª–∏—Ç—å—Å—è —Å–≤–æ—ó–º–∏ –∫—Ä–æ–∫–∞–º–∏ —Ç–∞ –¥–æ—Å–≤—ñ–¥–æ–º, —è–∫–∏–π –∞–∫—Ç—É–∞–ª—å–Ω–∏–π –∑–∞—Ä–∞–∑ –¥–ª—è –±–ª–æ–≥—ñ–≤ —Ç–∞ –±—ñ–∑–Ω–µ—Å—ñ–≤"""
    await bot.send_message(user_id, text=text)


async def send_message_in_2_min(bot: Bot, user_id):
    text = """
     –Ü–ù–¢–ï–ù–°–ò–í –ø–æ—á–Ω–µ—Ç—å—Å—è –∑–∞–≤—Ç—Ä–∞, —Ç–æ–º—É –¥–æ —Ü—å–æ–≥–æ —á–∞—Å—É —Ç–∏ –º–æ–∂–µ—à –∑–∞—Å–≤–æ—ó—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —É—Ä–æ–∫ —ñ –≥–æ—Ç—É–≤–∞—Ç–∏—Å—èü´Ç..
    """
    await bot.send_message(user_id, text=text)


async def send_message_in_5_min(bot: Bot, user_id):
    text = """
     1. –ü—Ä–∏–≤—ñ—Ç, –ø—Ä–∏–≤—ñ—Ç‚ú® - –õ–µ–∫—Ü—ñ—è 1 ¬´–Ø–ö –ù–û–í–ê–ß–ö–£ –í–ò–°–¢–†–û–á–¢–ò –°–ò–°–¢–ï–ú–£ –†–û–°–¢–£¬ª

ü™Ñ–¶—ñ–ª—å –ª–µ–∫—Ü—ñ—ó - –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ —á—ñ—Ç–∫—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞ —è—Å–Ω—ñ—Å—Ç—å –≤ —Ä–æ–±–æ—Ç—ñ –∑ –∫–ª—ñ—î–Ω—Ç–æ–º, —â–æ–± —Ç–∏ –º–æ–≥–ª–∞ –ø–ª–∞–Ω—É–≤–∞—Ç–∏ –∫–æ–∂–µ–Ω –µ—Ç–∞–ø —Ä–æ–±–æ—Ç–∏ –∑ –ª–µ–≥–∫—ñ—Å—Ç—é, –∂–∏—Ç–∏ –∂–∏—Ç—Ç—è —Ç–∞ –µ–∫–æ–ª–æ–≥—ñ—á–Ω–æ –Ω–∞—Å–æ–ª–æ–¥–∂—É–≤–∞—Ç–∏—Å—è –∫–æ–∂–Ω–æ—é —Å—Ñ–µ—Ä–æ—é

–ü—Ä–æ—Å—Ç–æ —Ç–∏—Ü—è–π —ñ –ø–µ—Ä–µ—Ö–æ–¥—å –¥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É [–Ω–µ –∑–∞–±—É–¥—å –ø—Ä–æ –∑—Ä—É—á–Ω–∏–π –æ–¥—è–≥, –∫–∞–≤–æ—á–∫—É/–∫–∞–∫–∞–æ —ñ –∑–∞–ø–∏—Å–Ω–∏–∫ - –Ω–æ—Ç—É–≤–∞—Ç–∏ –ø—Ä–∏–π–¥–µ—Ç—å—Å—è –±–∞–≥–∞—Ç–æü•π]

*—ñ –Ω–µ –∑–∞–±—É–≤–∞–π –≤—ñ–¥–º—ñ—á–∞—Ç–∏ –≤ —Å—Ç–æ—Ä—ñ—Å, —è–∫—â–æ –ª–æ–≤–∏—à —ñ–Ω—Å–∞–π—Ç–∏ - –Ω–∞–º –±—É–¥–µ –ø—Ä–∏—î–º–Ω–æ‚ô•Ô∏è

–ê –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–µ, —â–æ–± –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –Ω–∞—à–æ—ó –∞–∫–∞–¥–µ–º—ñ—ó –∑–∞—Ä–∞–∑ –ó–ê –ù–ê–ô–ù–ò–ñ–ß–ò–ú–ò –¶–Ü–ù–ê–ú–ò –≤–∂–µ —Ç—É—Ç üëâüèº https://womensfreelanceclub.site/

–ê –≤—Å—ñ –ø–∏—Ç–∞–Ω–Ω—è –ø–∏—à–∏ —Å—é–¥–∏ —É –Ω–∞—à –≤—ñ–¥–¥—ñ–ª—ñ —Ç—É—Ä–±–æ—Ç–∏ https://t.me/smmandpsychology
    """
    await bot.send_message(user_id, text=text)


@user_router.message(CommandStart())
async def user_start(message: Message, state: FSMContext):
    if db.exist_user(telegram_id=message.from_user.id):
        await message.answer("–ü—Ä–∏–≤—ñ—Ç, —è –æ—Å–æ–±–∏—Å—Ç–∏–π –±–æ—Ç alennamaer")
        await state.clear()
    else:
        await state.set_state(RegisterUser.registration_email)
        await message.answer(
            "–ü—Ä–∏–≤—ñ—Ç, —è –æ—Å–æ–±–∏—Å—Ç–∏–π –±–æ—Ç alennamaer\n–î–ª—è –ø–æ—á–∞—Ç–∫—É –ø–æ–¥—ñ–ª–∏—Å—å —Å–≤–æ—î—é –ø–æ—à—Ç–æ—é, —â–æ–± —è —Ç–æ—á–Ω–æ –±—ñ–ª—å—à–µ –Ω–µ –∑–∞–≥—É–±–∏–≤ —Ç–µ–±–µ"
        )


@user_router.message(RegisterUser.registration_email)
async def register_phone(message: Message, state: FSMContext, apscheduler:AsyncIOScheduler):
    email = message.text
    if re.match(r"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$", email):
        db.add_user(
            name=message.from_user.full_name,
            username=message.from_user.username,
            telegram_id=message.from_user.id,
            email=email,
        )
        message_text = """
        ü§ó –î—è–∫—É—î–º–æ, —â–æ –∑–∞–ª–∏—à–∏–ª–∞ —Å–≤–æ—é –ø–æ—à—Ç—É
        """
        await message.answer(text=message_text)
        await asyncio.sleep(2)
        await state.clear()
        await send_message_in_1_min(bot, message.from_user.id)
        apscheduler.add_job(
            send_message_in_2_min,
            trigger="date",
            run_date=datetime.now() + timedelta(seconds=20),
            kwargs={"bot": bot, "user_id": message.from_user.id},
        )
        apscheduler.add_job(
            send_message_in_5_min,
            trigger="date",
            run_date=datetime.now() + timedelta(minutes=1),
            kwargs={"bot": bot, "user_id": message.from_user.id},
        )
        try:
            if apscheduler.state == 0:
                apscheduler.start()
        except SchedulerAlreadyRunningError as e:
            print(e)
    else:
        await message.answer(
            "‚ùóÔ∏è–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ —Å–≤–æ—é email –∞–¥—Ä–µ—Å—É –≤ —Ñ–æ—Ä–º–∞—Ç—ñ example@ex.com"
        )
